pub const ENGLISH_FREQUENCIES: [f64; 256] = [
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, // A
  0.000000, // B
  0.000000, // C
  0.000000, // D
  0.000000, // E
  0.000000, // F
  0.000000, // G
  0.000000, // H
  0.000000, // I
  0.000000, // J
  0.000000, // K
  0.000000, // L
  0.000000, // M
  0.000000, // N
  0.000000, // O
  0.000000, // P
  0.000000, // Q
  0.000000, // R
  0.000000, // S
  0.000000, // T
  0.000000, // U
  0.000000, // V
  0.000000, // W
  0.000000, // X
  0.000000, // Y
  0.000000, // Z
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.082000, // a
  0.015000, // b
  0.028000, // c
  0.043000, // d
  0.130000, // e
  0.022000, // f
  0.020000, // g
  0.061000, // h
  0.070000, // i
  0.001500, // j
  0.007700, // k
  0.040000, // l
  0.024000, // m
  0.067000, // n
  0.075000, // o
  0.019000, // p
  0.000950, // q
  0.060000, // r
  0.063000, // s
  0.091000, // t
  0.028000, // u
  0.009800, // v
  0.024000, // w
  0.001500, // x
  0.020000, // y
  0.000740, // z
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
  0.000000, //
];

pub fn bytes_frequency(bytes: &[u8]) -> [f64; 256] {
  let len = bytes.len() as f64;

  let mut frequencies = [0f64; 256];

  bytes
    .iter()
    .for_each(|byte| frequencies[*byte as usize] += 1f64);

  frequencies
    .iter_mut()
    .for_each(|frequency| *frequency /= len);

  frequencies
}
